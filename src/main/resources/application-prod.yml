spring:
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://${{secrets.MYSQL_HOST}}:3306/security?serverTimezone=Asia/Seoul
    username: ${{secrets.MYSQL_USERNAME}}
    password: ${{secrets.MYSQL_PASSWORD}}

  jpa:
    hibernate:
      ddl-auto: create #create update none
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL5InnoDBDialect
  security:
    oauth2:
      client:
        registration:
          google: # /oauth2/authorization/google 이 주소를 동작하게 한다.
            client-id: ${{secrets.GOOGLE_CLIENT_ID}}
            client-secret: ${{secrets.GOOGLE_CLIENT_SECRET}}
            scope:
            - email
            - profile

          naver:
            client-id: ${{secrets.NAVER_CLIENT_ID}}
            client-secret: ${{secrets.NAVER_CLIENT_SECRET}}
            scope:
            - name
            - email
            - profile_image
            client-name: Naver
            authorization-grant-type: authorization_code #oauth2 방식
            redirect-uri: http://localhost:8080/login/oauth2/code/naver

        provider:
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response
  output:
    ansi:
      enabled: always

logging:
  level:
    com:
      twopow:
        security: info